RECORD PROGRAM 14: NoSQL - AGGREGATE FUNCTIONS AND REGULAR EXPRESSIONS



1.      Write a MongoDB query to sort customer details in ascending order of their name.

INVOICE> db.customer.find().sort({ name: 1 })
[
  {
    _id: ObjectId('67ff6f25ef0251dac0d861e1'),
    customer_id: '1002',
    name: 'arya',
    address: { place: 'beach', city: 'kochi' },
    phone: '9845623412'
  },
  {
    _id: ObjectId('67ff6f25ef0251dac0d861e2'),
    customer_id: '1003',
    name: 'roshan',
    address: { place: 'thodu', city: 'kollam' },
    phone: '9597789524'
  }
]

2.      Write a MongoDB query to count number of customers in each city.

INVOICE> db.customer.aggregate([
  {
     $group: {
       _id: "$address.city",
       customer_count: { $sum: 1 }
     }
   }
 ])
[
  { _id: 'kochi', customer_count: 1 },
  { _id: 'kollam', customer_count: 1 }
]


3.      Write a MongoDB query to find minimum and maximum age in each city.

INVOICE> db.customer.aggregate([
   {
     $group: {
       _id: "$address.city", 
       min_age: { $min: "$age" },
       max_age: { $max: "$age" }
     }
   }
 ])
[
  { _id: 'kochi', min_age: 22, max_age: 22 },
  { _id: 'kollam', min_age: 24, max_age: 24 }
]


4.       Write a MongoDB query using the $match stage to retrieve all customer documents whose customer_name starts with the letter “S”.

INVOICE> db.customer.insertOne({
   name: "Sreya",
   address: { place: "Main Road", city: "TKM" },
   phone: "9897897875",
   age: 26
 })
 
{
  acknowledged: true,
  insertedId: ObjectId('67ff7a20ef0251dac0d861e7')
}
INVOICE> db.customer.aggregate([
   {
     $match: {
       name: { $regex: "^S", $options: "i" }
     }
   }
 ])
 
[
  {
    _id: ObjectId('67ff7a20ef0251dac0d861e7'),
    name: 'Sreya',
    address: { place: 'Main Road', city: 'TKM' },
    phone: '9897897875',
    age: 26
  }
]

5.      Write a query using $lookup to join CUSTOMER and PRODUCT collections and display only customer name, product name, and price.

INVOICE> db.customer.aggregate([
   {
     $lookup: {
       from: "product",
       localField: "pid",
       foreignField: "product_id",
       as: "productInfo"
     }
   },
   {
     $project: {
       _id: 0,
       customerName: "$name",
       productName: { $arrayElemAt: ["$productInfo.name", 0] },
       price: { $arrayElemAt: ["$productInfo.price", 0] }
     }
   }
 ])
 
[
  { customerName: 'arya', productName: 'scale', price: 55 },
  { customerName: 'roshan', productName: 'scale', price: 55 },
  { customerName: 'Sreya', productName: 'scale', price: 55 }
]


//VERIFIED
